<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SCE.Objects</name>
    </assembly>
    <members>
        <member name="T:SCE.CContainer">
            <summary>
            A class containing components and the ICContainerHolder.
            Used for storing components by a holder.
            </summary>
        </member>
        <member name="P:SCE.CContainer.AssignableTypeSet">
            <summary>
            A set containing cached components types.
            </summary>
        </member>
        <member name="M:SCE.CContainer.Update">
            <summary>
            Calls update for every <see cref="T:SCE.IComponent"/> in this instance.
            </summary>
        </member>
        <member name="T:SCE.ICContainerHolder">
            <summary>
            An interface between the CContainer and its holder instance.
            </summary>
        </member>
        <member name="P:SCE.ICContainerHolder.Components">
            <summary>
            Gets the CContainer.
            </summary>
        </member>
        <member name="T:SCE.IComponent">
            <summary>
            Allows <see cref="T:SCE.IComponent"/> classes to modularly interface with their holder.
            </summary>
        </member>
        <member name="T:SCE.InvalidCContainerHolderException">
            <summary>
            Represents errors thrown when an incompatible <see cref="T:SCE.IComponent"/> is added to a component holder.
            </summary>
        </member>
        <member name="M:SCE.InvalidCContainerHolderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.InvalidCContainerHolderException"/> class.
            </summary>
        </member>
        <member name="M:SCE.InvalidCContainerHolderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.InvalidCContainerHolderException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:SCE.BoxCollider.CollidesWith(SCE.Collider)">
            <inheritdoc/>
        </member>
        <member name="M:SCE.CircleCollider.CollidesWith(SCE.Collider)">
            <inheritdoc/>
        </member>
        <member name="M:SCE.Collider.CollidesWith(SCE.Collider)">
            <summary>
            Returns whether a collision has occured between this and the given collider.
            </summary>
        </member>
        <member name="P:SCE.CollisionDetails.Handler">
            <summary>
            Gets the CollisionHandler which handled the collision.
            </summary>
        </member>
        <member name="P:SCE.CollisionDetails.Collider">
            <summary>
            Gets the other Collider that caused the collision.
            </summary>
        </member>
        <member name="P:SCE.CollisionDetails.Receiver">
            <summary>
            Gets the Collider that received the collision.
            </summary>
        </member>
        <member name="M:SCE.CollisionHandler.Update">
            <inheritdoc/>
        </member>
        <member name="T:SCE.Camera">
            <summary>
            Represents a camera in a world space.
            </summary>
        </member>
        <member name="M:SCE.Camera.SetCContainer(SCE.CContainer,SCE.ICContainerHolder)">
            <inheritdoc/>
        </member>
        <member name="M:SCE.Camera.GetMapView">
            <inheritdoc/>
        </member>
        <member name="T:SCE.RenderComponent2D">
            <summary>
            An <see cref="T:SCE.IComponent"/> used for storing an <see cref="T:SCE.IRenderable"/> in an object.
            </summary>
        </member>
        <member name="M:SCE.RenderComponent2D.#ctor(SCE.IRenderable)">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.RenderComponent2D"/> class.
            </summary>
            <param name="renderable">The initial <see cref="T:SCE.IRenderable"/>.</param>
        </member>
        <member name="M:SCE.Sprite2D.GetMapView">
            <inheritdoc/>
        </member>
        <member name="T:SCE.SpritePackage">
            <summary>
            A struct used for containing an image and its offset for rendering.
            </summary>
        </member>
        <member name="M:SCE.SpritePackage.#ctor(SCE.DisplayMapView,System.Int32,SCE.Vector2Int)">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.SpritePackage"/> struct.
            </summary>
        </member>
        <member name="T:SCE.StaticCameraTrackComponent">
            <summary>
            An <see cref="T:SCE.IComponent"/> used for static object camrea tracking.
            </summary>
        </member>
        <member name="M:SCE.StaticCameraTrackComponent.#ctor(SCE.SCEObject)">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.StaticCameraTrackComponent"/> class.
            </summary>
            <param name="obj">The object to track.</param>
        </member>
        <member name="P:SCE.StaticCameraTrackComponent.Object">
            <summary>
            Gets or sets the controlled camera.
            </summary>
        </member>
        <member name="P:SCE.StaticCameraTrackComponent.Anchor">
            <summary>
            Gets or sets the position anchor of the controlled camera.
            </summary>
        </member>
        <member name="M:SCE.StaticCameraTrackComponent.Update">
            <inheritdoc/>
        </member>
        <member name="T:SCE.ZoneCameraTrackComponent">
            <summary>
            An <see cref="T:SCE.IComponent"/> used for zone-based object camera tracking.
            </summary>
        </member>
        <member name="M:SCE.ZoneCameraTrackComponent.#ctor(SCE.SCEObject,SCE.Rect2DInt,SCE.Vector2Int)">
            <summary>
            Initializes a new instance of the <see cref="T:SCE.ZoneCameraTrackComponent"/> class.
            </summary>
            <param name="obj">The objcet to track.</param>
            <param name="boundingArea">The area the zone is bounded to.</param>
            <param name="zoneDimensions">The dimensions of the zone.</param>
            <exception cref="T:System.ArgumentException">Thrown if the <paramref name="zoneDimensions"/> are invalid.</exception>
        </member>
        <member name="P:SCE.ZoneCameraTrackComponent.Object">
            <summary>
            Gets or sets the object to track.
            </summary>
        </member>
        <member name="P:SCE.ZoneCameraTrackComponent.BoundingArea">
            <summary>
            Gets or sets the camera bounding area.
            </summary>
        </member>
        <member name="P:SCE.ZoneCameraTrackComponent.ZoneDimensions">
            <summary>
            Gets or sets the dimensions of the camera zone.
            </summary>
        </member>
        <member name="P:SCE.ZoneCameraTrackComponent.ZoneAnchor">
            <summary>
            Gets or sets the anchor of the zone.
            </summary>
        </member>
        <member name="P:SCE.ZoneCameraTrackComponent.CameraAnchor">
            <summary>
            Gets or sets the anchor of the camera.
            </summary>
        </member>
        <member name="M:SCE.WorldSpaceRHC.Update">
            <inheritdoc/>
        </member>
        <member name="P:SCE.SCEObject.IsActive">
            <summary>
            Gets or sets the local active state.
            </summary>
            <remarks>
            Note: Not recommended to set frequently as it will update all descents.
            </remarks>
        </member>
        <member name="P:SCE.SCEObject.GlobalIsActive">
            <summary>
            Gets the active state relative to its parents.
            </summary>
        </member>
        <member name="P:SCE.SCEObject.Position">
            <summary>
            Gets or sets the local position.
            </summary>
            <remarks>
            Note: Not recommended to set frequently as it will update all descents.
            </remarks>
        </member>
        <member name="P:SCE.SCEObject.GlobalPosition">
            <summary>
            Gets the position relative to its parents.
            </summary>
        </member>
        <member name="M:SCE.SCEObject.EnumerateDescendents">
            <summary>
            Enumerates all descendents.
            </summary>
        </member>
        <member name="M:SCE.SCEObject.EnumerateAllActive">
            <summary>
            Enumerates all active descendents including this.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SCE.World.Components">
            <inheritdoc/>
        </member>
        <member name="P:SCE.World.IsActive">
            <inheritdoc/>
        </member>
        <member name="M:SCE.World.Start">
            <inheritdoc/>
        </member>
        <member name="M:SCE.World.Update">
            <inheritdoc/>
        </member>
        <member name="M:SCE.World.Add(SCE.SCEObject)">
            <inheritdoc/>
        </member>
        <member name="M:SCE.World.Remove(SCE.SCEObject)">
            <inheritdoc/>
        </member>
    </members>
</doc>
